import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useState } from "react";
import { useRouter } from "next/router";
import { Box, Button, Container, Flex, FormControl, FormLabel, Heading, Input, Text, VStack, Code } from "@chakra-ui/react";


export default function Signup(props) {
  const router = useRouter();
  const [
    { username, password, "confirm-password": confirmPassword },
    setForm,
  ] = useState({
    username: "",
    password: "",
    "confirm-password": "",
  });
  const [error, setError] = useState("");

  function handleChange(e) {
    setForm({
      username,
      password,
      "confirm-password": confirmPassword,
      ...{ [e.target.name]: e.target.value.trim() },
    });
  }
  async function handleCreateAccount(e) {
    e.preventDefault();
    if (!username) return setError("Must include username");
    if (password !== confirmPassword) return setError("Passwords must Match");

    try {
      const res = await fetch("/api/auth/signup", {
        method: "POST",
        headers: {
          "content-type": "application/json",
        },
        body: JSON.stringify({ username, password }),
      });
      if (res.status === 200) return router.push("/dashboard");
      const { error: message } = await res.json();
      setError(message);
    } catch (err) {
      console.log(err);
    }
  }
  return (
    <Container maxW="container.md">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Flex direction="column" align="center" justify="center" minH="100vh" py={8}>
        <Heading as="h1" size="2xl" mb={8}>
          Welcome to the <a href="https://nextjs.org">Next.js</a> Login Page!
        </Heading>

        <Text fontSize="lg" mb={4}>
          Current Location: <Code>{router.asPath}</Code>
          <br />
          Status: <Code>{!props.isLoggedIn ? "Not" : ""} Logged In</Code>
          </Text>

          <VStack as="form" spacing={4} onSubmit={handleCreateAccount}>
            <FormControl>
             <FormLabel htmlFor="username">
              Username
              </FormLabel>
             <Input
                type="text"
                name="username"
                id="username"
                onChange={handleChange}
                value={username}
             />
            </FormControl>
            <FormControl>
              <FormLabel htmlFor="password">Password</FormLabel>
          <Input
            type="password"
            name="password"
            id="password"
            onChange={handleChange}
            value={password}
          />
        </FormControl>
        <FormControl>
          <FormLabel htmlFor="confirm-password">Confirm Password: </FormLabel>
          <Input
            type="password"
            name="confirm-password"
            id="confirm-password"
            onChange={handleChange}
            value={confirmPassword}
          />
          </FormControl>
          <Button type="submit" colorScheme="teal" size="lg" mb={4}>
            Submit
            </Button>
          {error && <Text color="red.500">{error}</Text>}
        </VStack>

        <Link href="/login">
        <Text color="teal.500" mt={4}>Login instead?</Text>
        </Link>
      </Flex>

      <Box as="footer" mt={8} textAlign="center">
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </Box>
    </Container>
  );
}
