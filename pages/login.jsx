import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useState } from "react";
import { useRouter } from "next/router";
import { withIronSessionSsr } from "iron-session/next";
import sessionOptions from "../config/session";
import Header from "../components/header";
import { Box, Button, Code, Container, Flex, Heading, Text, VStack, FormControl, FormLabel } from "@chakra-ui/react";

export const getServerSideProps = withIronSessionSsr(
  async function getServerSideProps({ req }) {
    const user = req.session.user;
    const props = {};
    if (user) {
      props.user = req.session.user;
      props.isLoggedIn = true;
    } else {
      props.isLoggedIn = false;
    }
    return { props };
  },
  sessionOptions
);

export default function Login(props) {
  const router = useRouter();
  const [{ username, password }, setForm] = useState({
    username: "",
    password: "",
  });
  const [error, setError] = useState("");
  function handleChange(e) {
    setForm({ username, password, ...{ [e.target.name]: e.target.value } });
  }
  async function handleLogin(e) {
    e.preventDefault();
    try {
      const res = await fetch("/api/auth/login", {
        method: "POST",
        headers: {
          "content-type": "application/json",
        },
        body: JSON.stringify({ username, password }),
      });
      if (res.status === 200) return router.push("/dashboard");
      const { error: message } = await res.json();
      setError(message);
    } catch (err) {
      console.log(err);
    }
  }
  return (
    <Container maxW="container.md">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header isLoggedIn={props.isLoggedIn} username={props?.user?.username} />

      <Box mt={8}>
        <Heading as="h1" size="xl" mb={4}>
          Welcome to the <a href="https://nextjs.org">Next.js</a> Login Page!
        </Heading>

        <p>
          Current Location: <code>{router.asPath}</code>
          <br/>
          Status:{" "}
          <code>
            {!props.isLoggedIn && " Not"} Logged In
          </code>
        </p>

        <form onSubmit={handleLogin}>
          <FormControl id="username" mb={4}>
            <FormLabel>Username</FormLabel>
            <input
              type="text"
              name="username"
              id="username"
              onChange={handleChange}
              value={username}
            />
          </FormControl>
          <FormControl id="password" mb={4}>
            <FormLabel>Password</FormLabel>
            <input
            type="password"
            name="password"
            id="password"
            onChange={handleChange}
            value={password}
          />
        </FormControl>
        <Button type="submit" colorScheme="teal" size="lg" mb={4}>
          Login
        </Button>
        {error && <Text color="red.500">{error}</Text>}
        </form>
        <Link href="/signup">
          <Button variant="link" colorScheme="teal">
          Sign up instead?
          </Button>
        </Link>
      </Box>

      <Box as="footer" mt={8} textAlign="center">
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </Box>
    </Container>
  );
}
